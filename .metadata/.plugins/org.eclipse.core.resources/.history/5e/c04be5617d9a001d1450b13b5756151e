package com.example.invertoryservice.repository;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;
import org.springframework.web.client.RestTemplate;

import com.example.invertoryservice.model.Inventory;
import com.example.invertoryservice.model.Product;

@Repository
public class InventoryRepository implements InventoryOperatations {
	@Autowired
	NamedParameterJdbcTemplate template;
	@Autowired
	RestTemplate getRestTemp;
	static String INSERT = "insert into inventory (id,p_id,prod_count) values(:id,:p_id,:prod_count)";
	static String GETBYID = "select * from inventory where p_id=:p_id ";
    static String GETALL="select * from inventory";
	public Inventory save(Inventory inv) {
		MapSqlParameterSource map = new MapSqlParameterSource();
		map.addValue("id", inv.getId());
		map.addValue("p_id", inv.getProduct().getP_id());
		map.addValue("prod_count", inv.getProd_count());
		template.update(INSERT, map);
		return inv;
	}

	public Inventory getByID(Long p_id) {
		MapSqlParameterSource map = new MapSqlParameterSource();

		map.addValue("p_id", p_id);
		// add a rest call to get object with p_id
		RestTemplate temp = new RestTemplate();
		Product p = temp.getForObject("http://product-service:8088/product/"+p_id, Product.class);
		Inventory inv = template.queryForObject(GETBYID, map, new BeanPropertyRowMapper<Inventory>(Inventory.class));
		inv.setProduct(p);
		return inv;
	}

	public List<Inventory> getAll() {
		return template.query(GETALL, new BeanPropertyRowMapper<Inventory>(Inventory.class));
	}
}